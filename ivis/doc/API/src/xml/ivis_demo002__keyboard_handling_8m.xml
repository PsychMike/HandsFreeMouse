<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="ivis_demo002__keyboard_handling_8m" kind="file">
    <compoundname>ivisDemo002_keyboardHandling.m</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="ivis_demo002__keyboard_handling_8m_1a61b9e537f5081f54d546db6d05e73fe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>noret::substitute</type>
        <definition>noret::substitute ivisDemo002_keyboardHandling</definition>
        <argsstring>()</argsstring>
        <name>ivisDemo002_keyboardHandling</name>
        <briefdescription>
<para>ivisDemo002_keyboardHandling. Shows how to use the InputHandler class to deal with keyboard inputs. </para>        </briefdescription>
        <detaileddescription>
<para>Demonstrates the basics of how to deal with user inputted keystrokes</para><para>Requires: ivis toolbox v1.3</para><para>Matlab: v2012 onwards</para><para><simplesect kind="see"><para><ref refid="ivis_demo001__check_installed_8m" kindref="compound">ivisDemo001_checkInstalled.m</ref> <ref refid="ivis_demo003__mouse_tracking_8m" kindref="compound">ivisDemo003_mouseTracking.m</ref></para></simplesect>
Author(S): Pete R Jones <ulink url="mailto:petejonze@gmail.com">petejonze@gmail.com</ulink></para><para>Version History: 1.0.0 PJ 22/06/2013 Initial build. 1.1.0 PJ 18/10/2013 General tidy up (ivis 1.4).</para><para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>: check timestamp and multiple inputs and invalid mappings</para></xrefdescription></xrefsect></para><para>Copyright 2014 : P R Jones <hruler/>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petejonze/Dropbox/MatlabToolkits/ivis/ivisDemos/ivisDemo002_keyboardHandling.m" line="17" bodyfile="/Users/petejonze/Dropbox/MatlabToolkits/ivis/ivisDemos/ivisDemo002_keyboardHandling.m" bodystart="17" bodyend="94"/>
        <references refid="clear_abs_all_8m_1acbd9097b185d4a7f5cce6af1d935a29d" compoundref="clear_abs_all_8m" startline="17" endline="82">clearAbsAll</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>ivisDemo002_keyboardHandling. Shows how to use the InputHandler class to deal with keyboard inputs. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>(Autoinserted<sp/>by<sp/>mtoc++)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>source<sp/>code<sp/>has<sp/>been<sp/>filtered<sp/>by<sp/>the<sp/>mtoc++<sp/>executable,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>which<sp/>generates<sp/>code<sp/>that<sp/>can<sp/>be<sp/>processed<sp/>by<sp/>the<sp/>doxygen<sp/>documentation<sp/>tool.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>it<sp/>can<sp/>neither<sp/>be<sp/>interpreted<sp/>by<sp/>MATLAB,<sp/>nor<sp/>can<sp/>it<sp/>be<sp/>compiled<sp/>with<sp/>a<sp/>C++<sp/>compiler.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Except<sp/>for<sp/>the<sp/>comments,<sp/>the<sp/>function<sp/>bodies<sp/>of<sp/>your<sp/>M-file<sp/>functions<sp/>are<sp/>untouched.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Consequently,<sp/>the<sp/>FILTER_SOURCE_FILES<sp/>doxygen<sp/>switch<sp/>(default<sp/>in<sp/>our<sp/>Doxyfile.template)<sp/>will<sp/>produce</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>attached<sp/>source<sp/>files<sp/>that<sp/>are<sp/>highly<sp/>readable<sp/>by<sp/>humans.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Additionally,<sp/>links<sp/>in<sp/>the<sp/>doxygen<sp/>generated<sp/>documentation<sp/>to<sp/>the<sp/>source<sp/>code<sp/>of<sp/>functions<sp/>and<sp/>class<sp/>members<sp/>refer<sp/>to</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>the<sp/>correct<sp/>locations<sp/>in<sp/>the<sp/>source<sp/>code<sp/>browser.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>However,<sp/>the<sp/>line<sp/>numbers<sp/>most<sp/>likely<sp/>do<sp/>not<sp/>correspond<sp/>to<sp/>the<sp/>line<sp/>numbers<sp/>in<sp/>the<sp/>original<sp/>MATLAB<sp/>source<sp/>files.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="ivis_demo002__keyboard_handling_8m_1a61b9e537f5081f54d546db6d05e73fe1" refkind="member"><highlight class="normal">noret::substitute<sp/><ref refid="ivis_demo002__keyboard_handling_8m_1a61b9e537f5081f54d546db6d05e73fe1" kindref="member" tooltip="ivisDemo002_keyboardHandling. Shows how to use the InputHandler class to deal with keyboard inputs...">ivisDemo002_keyboardHandling</ref>()<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>clear<sp/>memory<sp/>and<sp/>set<sp/>workspace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="clear_abs_all_8m_1acbd9097b185d4a7f5cce6af1d935a29d" kindref="member" tooltip="Clear command window: clc;.">clearAbsAll</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ivis.main.*<sp/>ivis.control.*;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>verify,<sp/>initialise,<sp/>and<sp/>launch<sp/>the<sp/>ivis<sp/>toolbox<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">IvMain.assertVersion(1.4);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">IvMain.initialise(IvParams.getSimpleConfig());</highlight></codeline>
<codeline lineno="27"><highlight class="normal">[~,<sp/>~,<sp/>InH]<sp/>=<sp/>IvMain.launch();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Wait<sp/>for<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>\nPress<sp/>space<sp/>to<sp/>continue\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>~any(InH.getInput()<sp/>==<sp/>InH.INPT_SPACE.code)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>WaitSecs(1/60);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">end</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Wait<sp/>for<sp/>return<sp/>[alternate<sp/>form<sp/>A]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>\nPress<sp/>return<sp/>to<sp/>continue\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">InH.waitForInput(InH.INPT_RETURN.code);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Wait<sp/>for<sp/>space<sp/>[alternative<sp/>form<sp/>B,<sp/>from<sp/>the<sp/>ivis.control<sp/>package]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">InH.waitForInput(InH.INPT_SPACE,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\nPress<sp/>space<sp/>again<sp/>to<sp/>continue<sp/>to<sp/>Part<sp/>B<sp/>(will<sp/>restart<sp/>ivis)\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Finish<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">IvMain.finishUp();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>%<sp/>Try<sp/>again<sp/>with<sp/>a<sp/>custom<sp/>class<sp/>and<sp/>some<sp/>more<sp/>advanced<sp/>functionality<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>\n--------------------------------------------------------------\n\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>Now<sp/>we<sp/>&quot;</highlight><highlight class="stringliteral">&quot;<sp/>ll<sp/>try<sp/>again,<sp/>using<sp/>a<sp/>custom<sp/>class<sp/>that<sp/>has<sp/>additional<sp/>keys<sp/>mapped\n\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Re-load<sp/>ivis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">params<sp/>=<sp/>IvParams.getSimpleConfig(</highlight><highlight class="stringliteral">&quot;<sp/>keyboard.handlerClass<sp/>&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;<sp/>MyDemoInputHandler<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/><sp/>substitute<sp/>our<sp/>custom<sp/>input<sp/>handler<sp/>class<sp/>(see<sp/>the<sp/>resources<sp/>subdirectory)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">IvMain.initialise(params);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">[~,<sp/>~,<sp/>InH]<sp/>=<sp/>IvMain.launch();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Wait<sp/>for<sp/>custom<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">InH.waitForInput(InH.INPT_B,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\nPress<sp/>INPT_B<sp/>(<sp/>&quot;</highlight><highlight class="stringliteral">&quot;<sp/>b<sp/>&quot;</highlight><highlight class="stringliteral">&quot;<sp/>)<sp/>to<sp/>continue\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>All<sp/>the<sp/>standard<sp/>inputs<sp/>still<sp/>work<sp/>with<sp/>custom<sp/>classes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">InH.waitForInput(InH.INPT_SPACE,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\nPress<sp/>space<sp/>like<sp/>before\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>multiple<sp/>possible<sp/>inputs<sp/>can<sp/>be<sp/>used,<sp/>and<sp/>the<sp/>users<sp/>response<sp/>can<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>to<sp/>control<sp/>what<sp/>happens<sp/>next<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">resp<sp/>=<sp/>InH.waitForInput([InH.INPT_A<sp/>InH.INPT_B],<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\nPress<sp/>A<sp/>or<sp/>B\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>resp<sp/>==<sp/>InH.INPT_A.code</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>You<sp/>pressed<sp/>A.<sp/>Good<sp/>choice\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>You<sp/>pressed<sp/>B.<sp/>Fair<sp/>enough\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">end</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Escape<sp/>will<sp/>always<sp/>be<sp/>detected<sp/>and<sp/>throw<sp/>an<sp/>error<sp/>(unless<sp/>explictly<sp/>asked</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>not<sp/>to)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>\nPress<sp/>escape<sp/>to<sp/>break<sp/>out<sp/>of<sp/>an<sp/>endless<sp/>while<sp/>loop\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>1</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InH.getInput();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaitSecs(1/60);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>ME</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>beep()</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>\n-----------------------------------------\n\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>The<sp/>following<sp/>exception<sp/>was<sp/>thrown:\n\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>disp(ME)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>-----------------------------------------\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">end</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>And<sp/>standard<sp/>PTB<sp/>commands<sp/>still<sp/>work<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>\nPress<sp/>any<sp/>key<sp/>to<sp/>finish\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">KbWait([],<sp/>2);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Finish<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">IvMain.finishUp();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Final<sp/>thoughts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>\n\nn.b.,<sp/>try<sp/>running<sp/>InputHandler.test()<sp/>to<sp/>see<sp/>what<sp/>your<sp/>keyboard<sp/>inputs<sp/>look<sp/>like\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/petejonze/Dropbox/MatlabToolkits/ivis/ivisDemos/ivisDemo002_keyboardHandling.m"/>
  </compounddef>
</doxygen>
