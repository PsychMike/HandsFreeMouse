<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_c_expandable_buffer" kind="class" prot="public">
    <compoundname>CExpandableBuffer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">handle</basecompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_c_expandable_buffer_1ad93a7591f7563e869535fb3ad44dc33e" prot="public" static="yes" mutable="no">
        <type>const matlabtypesubstitute</type>
        <definition>CExpandableBuffer::DEFAULT_EXPANSION_FACTOR</definition>
        <argsstring></argsstring>
        <name>DEFAULT_EXPANSION_FACTOR</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>default amount to multiply capacity by </para>        </briefdescription>
        <detaileddescription>
<para><linebreak/>
<bold>Default:</bold> 2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="67" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="67" bodyend="-1"/>
        <referencedby refid="class_c_expandable_buffer_1a86cfc07ab005629825a291c53fb582da" compoundref="_c_expandable_buffer_8m" startline="132" endline="147">CExpandableBuffer</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_c_expandable_buffer_1aa1ca207113294db7d1d653ad9cbba55a" prot="private" static="no" mutable="no">
        <type>matlabtypesubstitute</type>
        <definition>CExpandableBuffer::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
<para>the data </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="77" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_expandable_buffer_1aa65ff4a2d35e248f4fd66e8b9a48834c" prot="public" static="no" mutable="no">
        <type>matlabtypesubstitute</type>
        <definition>CExpandableBuffer::capacity</definition>
        <argsstring></argsstring>
        <name>capacity</name>
        <briefdescription>
<para>max n data rows </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This property has non-standard access specifiers: <computeroutput>SetAccess = Private, GetAccess = Public</computeroutput> </para><simplesectsep/><para><ulink url="http://www.mathworks.com/help/matlab/matlab_oop/property-attributes.html">Matlab documentation of property attributes.</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="86" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_expandable_buffer_1a896a475d9b607bee138543e37a6ae13c" prot="public" static="no" mutable="no">
        <type>matlabtypesubstitute</type>
        <definition>CExpandableBuffer::ncols</definition>
        <argsstring></argsstring>
        <name>ncols</name>
        <briefdescription>
<para>n data columns </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This property has non-standard access specifiers: <computeroutput>SetAccess = Private, GetAccess = Public</computeroutput> </para><simplesectsep/><para><ulink url="http://www.mathworks.com/help/matlab/matlab_oop/property-attributes.html">Matlab documentation of property attributes.</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="95" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_expandable_buffer_1ae443329efce96b7791bc7d250c9e5c80" prot="public" static="no" mutable="no">
        <type>matlabtypesubstitute</type>
        <definition>CExpandableBuffer::expansionFactor</definition>
        <argsstring></argsstring>
        <name>expansionFactor</name>
        <briefdescription>
<para>amount to multiply capacity by </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This property has non-standard access specifiers: <computeroutput>SetAccess = Private, GetAccess = Public</computeroutput> </para><simplesectsep/><para><ulink url="http://www.mathworks.com/help/matlab/matlab_oop/property-attributes.html">Matlab documentation of property attributes.</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="104" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="104" bodyend="-1"/>
        <referencedby refid="class_c_expandable_buffer_1a86cfc07ab005629825a291c53fb582da" compoundref="_c_expandable_buffer_8m" startline="132" endline="147">CExpandableBuffer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_c_expandable_buffer_1ae79d319852348df51bf4121c8b4742b8" prot="public" static="no" mutable="no">
        <type>matlabtypesubstitute</type>
        <definition>CExpandableBuffer::nrows</definition>
        <argsstring></argsstring>
        <name>nrows</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>internal nElements counter </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This property has non-standard access specifiers: <computeroutput>SetAccess = Private, GetAccess = Public</computeroutput> </para><simplesectsep/><para><ulink url="http://www.mathworks.com/help/matlab/matlab_oop/property-attributes.html">Matlab documentation of property attributes.</ulink> <linebreak/>
<bold>Default:</bold> 0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="113" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_expandable_buffer_1a86cfc07ab005629825a291c53fb582da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CExpandableBuffer::CExpandableBuffer</definition>
        <argsstring>(matlabtypesubstitute n, matlabtypesubstitute m, matlabtypesubstitute expansionFactor)</argsstring>
        <name>CExpandableBuffer</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>n</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>m</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>expansionFactor</declname>
        </param>
        <briefdescription>
<para><ref refid="class_c_expandable_buffer" kindref="compound">CExpandableBuffer</ref> Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>obj = <ref refid="class_c_expandable_buffer" kindref="compound">CExpandableBuffer</ref>(n[,m=1][, expansionFactor=2])</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>initial n data rows (int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>n data columns (int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expansionFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>amount to increase &quot;n&quot; by once 90 percent capacity exceeded (float) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>obj <ref refid="class_c_expandable_buffer" kindref="compound">CExpandableBuffer</ref> object</para></simplesect>
<simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="132" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="132" bodyend="147"/>
        <references refid="class_c_expandable_buffer_1ad93a7591f7563e869535fb3ad44dc33e" compoundref="_c_expandable_buffer_8m" startline="67">DEFAULT_EXPANSION_FACTOR</references>
        <references refid="class_c_expandable_buffer_1ae443329efce96b7791bc7d250c9e5c80" compoundref="_c_expandable_buffer_8m" startline="104">expansionFactor</references>
        <referencedby refid="class_c_expandable_buffer_1a62ea501d1a9f9bfcd79a40c8a9c5f708" compoundref="_c_expandable_buffer_8m" startline="547" endline="570">testMatrix</referencedby>
        <referencedby refid="class_c_expandable_buffer_1ac0e17fe339d2f550103a756a6e7b8a4c" compoundref="_c_expandable_buffer_8m" startline="581" endline="613">testSpeed</referencedby>
        <referencedby refid="class_c_expandable_buffer_1a229c8336eb48fbaca09691932fcb0300" compoundref="_c_expandable_buffer_8m" startline="494" endline="536">testVector</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1a1f7addd13f7b10dbfb3b4012b553ee06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>noret::substitute</type>
        <definition>noret::substitute CExpandableBuffer::put</definition>
        <argsstring>(matlabtypesubstitute x)</argsstring>
        <name>put</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>put Add data row(s). </para>        </briefdescription>
        <detaileddescription>
<para>obj.put(x)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>data rows (float)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="166" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="166" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1a73808f14b664ba56fb212ed9f4784ccd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mlhsSubst&lt; mlhsInnerSubst&lt; matlabtypesubstitute, y &gt;,mlhsInnerSubst&lt; matlabtypesubstitute, ni &gt; &gt;</type>
        <definition>mlhsSubst&lt; mlhsInnerSubst&lt; matlabtypesubstitute, y &gt;,mlhsInnerSubst&lt; matlabtypesubstitute, ni &gt; &gt; CExpandableBuffer::get</definition>
        <argsstring>(matlabtypesubstitute ni, matlabtypesubstitute mi)</argsstring>
        <name>get</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>ni</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>mi</declname>
        </param>
        <briefdescription>
<para>get Get rows at specified indices (blank input for all). </para>        </briefdescription>
        <detaileddescription>
<para>y = obj.get([ni][, mi])</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ni</parametername>
</parameternamelist>
<parameterdescription>
<para>row indices </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mi</parametername>
</parameternamelist>
<parameterdescription>
<para>col indices </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y data rows (float)</para></simplesect>
<simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="202" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="202" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1a9bf2c7a52efd5e467927e78c0d59784c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt;</type>
        <definition>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt; CExpandableBuffer::getN</definition>
        <argsstring>(matlabtypesubstitute n, matlabtypesubstitute mi)</argsstring>
        <name>getN</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>n</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>mi</declname>
        </param>
        <briefdescription>
<para>getN Get N rows (first start). </para>        </briefdescription>
        <detaileddescription>
<para>y = obj.getN(n[, mi])</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows to return </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mi</parametername>
</parameternamelist>
<parameterdescription>
<para>col indices </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y data rows (float)</para></simplesect>
<simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="231" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="231" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1aa334084b7a2d84169b2febce5e98b2e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt;</type>
        <definition>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt; CExpandableBuffer::getLastN</definition>
        <argsstring>(matlabtypesubstitute n, matlabtypesubstitute mi)</argsstring>
        <name>getLastN</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>n</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>mi</declname>
        </param>
        <briefdescription>
<para>getLastN Get N rows (from end). </para>        </briefdescription>
        <detaileddescription>
<para>y = obj.getLastN(n[, mi])</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>n rows (int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mi</parametername>
</parameternamelist>
<parameterdescription>
<para>col indices </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y data rows (float)</para></simplesect>
<simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="264" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="264" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1a5ed697ee857789571ee6538ec60d405a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt;</type>
        <definition>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt; CExpandableBuffer::getLastNnonNaN</definition>
        <argsstring>(matlabtypesubstitute n, matlabtypesubstitute mi)</argsstring>
        <name>getLastNnonNaN</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>n</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>mi</declname>
        </param>
        <briefdescription>
<para>getLastNnonNaN Get N rows (from end), discounting any rows with NaNs in. </para>        </briefdescription>
        <detaileddescription>
<para>y = obj.getLastNnonNaN(n[, mi])</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>n rows (int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mi</parametername>
</parameternamelist>
<parameterdescription>
<para>col indices </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y data rows (float)</para></simplesect>
<simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="297" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="297" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1ad1bc68d426cb2ad9fc1864170ae2185a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, nrows_nonNaN &gt;</type>
        <definition>mlhsInnerSubst&lt;matlabtypesubstitute,nrows_nonNaN&gt; CExpandableBuffer::computeNnonNaN</definition>
        <argsstring>(matlabtypesubstitute mi)</argsstring>
        <name>computeNnonNaN</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>mi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="334" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="334" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1afcf61362b68aa8d3b7ca9a1eafb4ab9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt;</type>
        <definition>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt; CExpandableBuffer::getBeforeEach</definition>
        <argsstring>(matlabtypesubstitute A, matlabtypesubstitute testCol, matlabtypesubstitute mi)</argsstring>
        <name>getBeforeEach</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>A</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>testCol</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>mi</declname>
        </param>
        <briefdescription>
<para>getBeforeEach Return elements in column K where elements in column J immediately precede values specified in A. </para>        </briefdescription>
        <detaileddescription>
<para>y = obj.getBeforeEach(A, testCol[, mi])</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>values to test against [column of floats] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>testCol</parametername>
</parameternamelist>
<parameterdescription>
<para>column num to test A against (int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mi</parametername>
</parameternamelist>
<parameterdescription>
<para>column indices to return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y data rows (float)</para></simplesect>
<simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ</para></simplesect>
may start to be unacceptably slow as the n points increases </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="345" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="345" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1a414077d9027e7495d48bf67b60d74984" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt;</type>
        <definition>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt; CExpandableBuffer::getAfterX</definition>
        <argsstring>(matlabtypesubstitute X, matlabtypesubstitute testCol, matlabtypesubstitute mi)</argsstring>
        <name>getAfterX</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>X</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>testCol</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>mi</declname>
        </param>
        <briefdescription>
<para>getAfterX Return elements in column K where elements in column J &gt; X. </para>        </briefdescription>
        <detaileddescription>
<para>y = obj.getAfterX(X, testCol[, mi])</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>value to test against [float scalar] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>testCol</parametername>
</parameternamelist>
<parameterdescription>
<para>column num to test A against (int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mi</parametername>
</parameternamelist>
<parameterdescription>
<para>column indices to return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y data rows (float)</para></simplesect>
<simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="379" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="379" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1a0408d24f12d65322710c1681b9380f71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt;</type>
        <definition>mlhsInnerSubst&lt; matlabtypesubstitute, y &gt; CExpandableBuffer::getEqual</definition>
        <argsstring>(matlabtypesubstitute X, matlabtypesubstitute testCol, matlabtypesubstitute mi)</argsstring>
        <name>getEqual</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>X</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>testCol</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>mi</declname>
        </param>
        <briefdescription>
<para>getEqual Return elements in column K where elements in column J equal specified values. </para>        </briefdescription>
        <detaileddescription>
<para>y = obj.getEqual(X, testCol[, mi])</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>value to test against [float scalar] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>testCol</parametername>
</parameternamelist>
<parameterdescription>
<para>column num to test A against (int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mi</parametername>
</parameternamelist>
<parameterdescription>
<para>column indices to return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y data rows (float)</para></simplesect>
<simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="406" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="406" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1a45f92b3f9914d41cf77aef9c50acf084" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mlhsSubst&lt; mlhsInnerSubst&lt; matlabtypesubstitute, n &gt;,mlhsInnerSubst&lt; matlabtypesubstitute, m &gt; &gt;</type>
        <definition>mlhsSubst&lt; mlhsInnerSubst&lt; matlabtypesubstitute, n &gt;,mlhsInnerSubst&lt; matlabtypesubstitute, m &gt; &gt; CExpandableBuffer::nElements</definition>
        <argsstring>()</argsstring>
        <name>nElements</name>
        <briefdescription>
<para>nElements Get {nrows, ncols} </para>        </briefdescription>
        <detaileddescription>
<para><verbatim>[n,m] = obj.nElements()
</verbatim></para><para><simplesect kind="return"><para>n nrows </para><simplesectsep/><para>m ncols</para></simplesect>
<simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="433" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="433" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1af0eeb26f4827cd47e3566c925f9a06ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>noret::substitute</type>
        <definition>noret::substitute CExpandableBuffer::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>clear Reset counters and set all elements to NaN (maintain final capacity). </para>        </briefdescription>
        <detaileddescription>
<para><verbatim>obj.clear()
</verbatim></para><para><simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="453" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="453" bodyend="456"/>
        <referencedby refid="clear_abs_all_8m_1acbd9097b185d4a7f5cce6af1d935a29d" compoundref="clear_abs_all_8m" startline="17" endline="76">clearAbsAll</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_c_expandable_buffer_1aa8a196edaf4d159d21bf9e7eec750f9b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>noret::substitute</type>
        <definition>noret::substitute CExpandableBuffer::unitTests</definition>
        <argsstring>()</argsstring>
        <name>unitTests</name>
        <briefdescription>
<para>Unit tests --------------------------------------------------<mdash/> Unit test main entry point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="479" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="479" bodyend="482"/>
        <references refid="test_suite_from_static_8m_1a93546a97a0ef68ec5d47a3890174658e" compoundref="test_suite_from_static_8m" startline="17" endline="33">testSuiteFromStatic</references>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1a229c8336eb48fbaca09691932fcb0300" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>noret::substitute</type>
        <definition>noret::substitute CExpandableBuffer::testVector</definition>
        <argsstring>()</argsstring>
        <name>testVector</name>
        <briefdescription>
<para>Unit Test. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="494" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="494" bodyend="536"/>
        <references refid="class_c_expandable_buffer_1a86cfc07ab005629825a291c53fb582da" compoundref="_c_expandable_buffer_8m" startline="132" endline="147">CExpandableBuffer</references>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1a62ea501d1a9f9bfcd79a40c8a9c5f708" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>noret::substitute</type>
        <definition>noret::substitute CExpandableBuffer::testMatrix</definition>
        <argsstring>()</argsstring>
        <name>testMatrix</name>
        <briefdescription>
<para>Unit Test. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="547" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="547" bodyend="570"/>
        <references refid="class_c_expandable_buffer_1a86cfc07ab005629825a291c53fb582da" compoundref="_c_expandable_buffer_8m" startline="132" endline="147">CExpandableBuffer</references>
      </memberdef>
      <memberdef kind="function" id="class_c_expandable_buffer_1ac0e17fe339d2f550103a756a6e7b8a4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>noret::substitute</type>
        <definition>noret::substitute CExpandableBuffer::testSpeed</definition>
        <argsstring>()</argsstring>
        <name>testSpeed</name>
        <briefdescription>
<para>Unit Test. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="date"><para>26/06/14 </para></simplesect>
<simplesect kind="author"><para>PRJ </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="581" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="581" bodyend="613"/>
        <references refid="class_c_expandable_buffer_1a86cfc07ab005629825a291c53fb582da" compoundref="_c_expandable_buffer_8m" startline="132" endline="147">CExpandableBuffer</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>matrix data-structure that expands by a factor when capacity is exceeded. </para>    </briefdescription>
    <detaileddescription>
<para>n.b., columns inputs only! although it can expand, it is always best to allocate sufficient memory in advance, where possible. for example usage, see: <ref refid="class_c_expandable_buffer_1aa8a196edaf4d159d21bf9e7eec750f9b" kindref="member">CExpandableBuffer.unitTests()</ref>;</para><para><simplesect kind="par"><title>CExpandableBuffer Methods</title><para><itemizedlist>
<listitem><para><ref refid="class_c_expandable_buffer" kindref="compound">CExpandableBuffer</ref> - Constructor</para></listitem><listitem><para>put - Add data row(s)</para></listitem><listitem><para>get - Get rows at specified indices (blank input for all)</para></listitem><listitem><para>getN - Get N rows (first start)</para></listitem><listitem><para>getLastN - Get N rows (from end)</para></listitem><listitem><para>getBeforeEach - Return elements in column K where elements in column J immediately precede the values specified in A</para></listitem><listitem><para>getAfterX - Return elements in column K where elements in column J &gt; X</para></listitem><listitem><para>getEqual - Return elements in column K where elements in column J equal specified values</para></listitem><listitem><para>nElements - Get {nrows, ncols}</para></listitem><listitem><para>clear - Reset counters and set all elements to NaN (maintain final capacity)</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="class_c_circular_buffer" kindref="compound">CCircularBuffer</ref></para></simplesect>
<simplesect kind="par"><title>Example</title><para>x = CExpandableBuffer(10,3), x.put([1 2 3; 11 12 13]), x.get()</para></simplesect>
<simplesect kind="par"><title>Author</title><para>Pete R Jones <ulink url="mailto:petejonze@gmail.com">petejonze@gmail.com</ulink></para></simplesect>
<simplesect kind="par"><title>Verinfo</title><para>1.0 PJ 03/2013 : first_build<linebreak/>
</para></simplesect>
Todo: Abstract some methods to a generic <computeroutput>Buffer</computeroutput> class?</para><para>Copyright 2014 : P R Jones <hruler/>
 </para>    </detaileddescription>
    <inheritancegraph>
      <node id="462">
        <label>handle</label>
      </node>
      <node id="461">
        <label>CExpandableBuffer</label>
        <link refid="class_c_expandable_buffer"/>
        <childnode refid="462" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="464">
        <label>handle</label>
      </node>
      <node id="463">
        <label>CExpandableBuffer</label>
        <link refid="class_c_expandable_buffer"/>
        <childnode refid="464" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" line="18" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/CExpandableBuffer.m" bodystart="17" bodyend="625"/>
    <listofallmembers>
      <member refid="class_c_expandable_buffer_1aa1ca207113294db7d1d653ad9cbba55a" prot="private" virt="non-virtual"><scope>CExpandableBuffer</scope><name>buffer</name></member>
      <member refid="class_c_expandable_buffer_1aa65ff4a2d35e248f4fd66e8b9a48834c" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>capacity</name></member>
      <member refid="class_c_expandable_buffer_1a86cfc07ab005629825a291c53fb582da" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>CExpandableBuffer</name></member>
      <member refid="class_c_expandable_buffer_1af0eeb26f4827cd47e3566c925f9a06ff" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>clear</name></member>
      <member refid="class_c_expandable_buffer_1ad1bc68d426cb2ad9fc1864170ae2185a" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>computeNnonNaN</name></member>
      <member refid="class_c_expandable_buffer_1ad93a7591f7563e869535fb3ad44dc33e" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>DEFAULT_EXPANSION_FACTOR</name></member>
      <member refid="class_c_expandable_buffer_1ae443329efce96b7791bc7d250c9e5c80" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>expansionFactor</name></member>
      <member refid="class_c_expandable_buffer_1a73808f14b664ba56fb212ed9f4784ccd" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>get</name></member>
      <member refid="class_c_expandable_buffer_1a414077d9027e7495d48bf67b60d74984" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>getAfterX</name></member>
      <member refid="class_c_expandable_buffer_1afcf61362b68aa8d3b7ca9a1eafb4ab9d" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>getBeforeEach</name></member>
      <member refid="class_c_expandable_buffer_1a0408d24f12d65322710c1681b9380f71" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>getEqual</name></member>
      <member refid="class_c_expandable_buffer_1aa334084b7a2d84169b2febce5e98b2e9" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>getLastN</name></member>
      <member refid="class_c_expandable_buffer_1a5ed697ee857789571ee6538ec60d405a" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>getLastNnonNaN</name></member>
      <member refid="class_c_expandable_buffer_1a9bf2c7a52efd5e467927e78c0d59784c" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>getN</name></member>
      <member refid="class_c_expandable_buffer_1a896a475d9b607bee138543e37a6ae13c" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>ncols</name></member>
      <member refid="class_c_expandable_buffer_1a45f92b3f9914d41cf77aef9c50acf084" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>nElements</name></member>
      <member refid="class_c_expandable_buffer_1ae79d319852348df51bf4121c8b4742b8" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>nrows</name></member>
      <member refid="class_c_expandable_buffer_1a1f7addd13f7b10dbfb3b4012b553ee06" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>put</name></member>
      <member refid="class_c_expandable_buffer_1a62ea501d1a9f9bfcd79a40c8a9c5f708" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>testMatrix</name></member>
      <member refid="class_c_expandable_buffer_1ac0e17fe339d2f550103a756a6e7b8a4c" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>testSpeed</name></member>
      <member refid="class_c_expandable_buffer_1a229c8336eb48fbaca09691932fcb0300" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>testVector</name></member>
      <member refid="class_c_expandable_buffer_1aa8a196edaf4d159d21bf9e7eec750f9b" prot="public" virt="non-virtual"><scope>CExpandableBuffer</scope><name>unitTests</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
