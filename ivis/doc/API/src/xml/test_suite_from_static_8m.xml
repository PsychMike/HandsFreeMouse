<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="test_suite_from_static_8m" kind="file">
    <compoundname>testSuiteFromStatic.m</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="test_suite_from_static_8m_1a93546a97a0ef68ec5d47a3890174658e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, suite &gt;</type>
        <definition>mlhsInnerSubst&lt; matlabtypesubstitute, suite &gt; testSuiteFromStatic</definition>
        <argsstring>(matlabtypesubstitute name)</argsstring>
        <name>testSuiteFromStatic</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>add on to xUnit to permit test cases to be collected from amongst the Static methods of a specified class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/testSuiteFromStatic.m" line="17" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/testSuiteFromStatic.m" bodystart="17" bodyend="33"/>
        <referencedby refid="class_c_circular_buffer_1a91040c34319c02b2eb5541853305afc0" compoundref="_c_circular_buffer_8m" startline="282" endline="285">CCircularBuffer::unitTests</referencedby>
        <referencedby refid="class_c_expandable_buffer_1aa8a196edaf4d159d21bf9e7eec750f9b" compoundref="_c_expandable_buffer_8m" startline="479" endline="482">CExpandableBuffer::unitTests</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>add on to xUnit to permit test cases to be collected from amongst the Static methods of a specified class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>(Autoinserted<sp/>by<sp/>mtoc++)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>source<sp/>code<sp/>has<sp/>been<sp/>filtered<sp/>by<sp/>the<sp/>mtoc++<sp/>executable,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>which<sp/>generates<sp/>code<sp/>that<sp/>can<sp/>be<sp/>processed<sp/>by<sp/>the<sp/>doxygen<sp/>documentation<sp/>tool.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>it<sp/>can<sp/>neither<sp/>be<sp/>interpreted<sp/>by<sp/>MATLAB,<sp/>nor<sp/>can<sp/>it<sp/>be<sp/>compiled<sp/>with<sp/>a<sp/>C++<sp/>compiler.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Except<sp/>for<sp/>the<sp/>comments,<sp/>the<sp/>function<sp/>bodies<sp/>of<sp/>your<sp/>M-file<sp/>functions<sp/>are<sp/>untouched.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Consequently,<sp/>the<sp/>FILTER_SOURCE_FILES<sp/>doxygen<sp/>switch<sp/>(default<sp/>in<sp/>our<sp/>Doxyfile.template)<sp/>will<sp/>produce</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>attached<sp/>source<sp/>files<sp/>that<sp/>are<sp/>highly<sp/>readable<sp/>by<sp/>humans.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Additionally,<sp/>links<sp/>in<sp/>the<sp/>doxygen<sp/>generated<sp/>documentation<sp/>to<sp/>the<sp/>source<sp/>code<sp/>of<sp/>functions<sp/>and<sp/>class<sp/>members<sp/>refer<sp/>to</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>the<sp/>correct<sp/>locations<sp/>in<sp/>the<sp/>source<sp/>code<sp/>browser.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>However,<sp/>the<sp/>line<sp/>numbers<sp/>most<sp/>likely<sp/>do<sp/>not<sp/>correspond<sp/>to<sp/>the<sp/>line<sp/>numbers<sp/>in<sp/>the<sp/>original<sp/>MATLAB<sp/>source<sp/>files.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="test_suite_from_static_8m_1a93546a97a0ef68ec5d47a3890174658e" refkind="member"><highlight class="normal">mlhsInnerSubst&lt;matlabtypesubstitute,suite&gt;<sp/><ref refid="test_suite_from_static_8m_1a93546a97a0ef68ec5d47a3890174658e" kindref="member" tooltip="add on to xUnit to permit test cases to be collected from amongst the Static methods of a specified c...">testSuiteFromStatic</ref>(matlabtypesubstitute<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>suite<sp/>=<sp/>TestSuite(name);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>mco<sp/>=<sp/>meta.class.fromName(name);<sp/></highlight><highlight class="comment">/*<sp/><sp/>e.g.,<sp/>?CCircularBuffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>staticMethods<sp/>=<sp/>mco.MethodList([mco.MethodList.Static]);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>staticMethodNames<sp/>=<sp/>[staticMethods.Name];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>isTest<sp/>=<sp/>xunit.utils.isTestString(staticMethodNames)<sp/>&amp;<sp/>strcmpi(</highlight><highlight class="stringliteral">&quot;<sp/>public<sp/>&quot;</highlight><highlight class="normal">,<sp/>[staticMethods.Access]);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>testMethodNames<sp/>=<sp/>fliplr([staticMethods(isTest).Name]);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1:numel(testMethodNames)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcn<sp/>=<sp/>[mco.Name<sp/>&quot;<sp/>.<sp/>&quot;<sp/>testMethodNames[k]];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suite.add(FunctionHandleTestCase(str2func(fcn),<sp/>[],<sp/>[]));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="32"><highlight class="normal">end</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/testSuiteFromStatic.m"/>
  </compounddef>
</doxygen>
