<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_truncated_gaussian_8m" kind="file">
    <compoundname>TruncatedGaussian.m</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="_truncated_gaussian_8m_1a17491b009e97e9422264d5694f887dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mlhsSubst&lt; mlhsInnerSubst&lt; matlabtypesubstitute, X &gt;,mlhsInnerSubst&lt; matlabtypesubstitute, meaneffective &gt;,mlhsInnerSubst&lt; matlabtypesubstitute, sigmaeffective &gt; &gt;</type>
        <definition>mlhsSubst&lt; mlhsInnerSubst&lt; matlabtypesubstitute, X &gt;,mlhsInnerSubst&lt; matlabtypesubstitute, meaneffective &gt;,mlhsInnerSubst&lt; matlabtypesubstitute, sigmaeffective &gt; &gt; TruncatedGaussian</definition>
        <argsstring>(matlabtypesubstitute sigma, matlabtypesubstitute range, matlabtypesubstitute varargin)</argsstring>
        <name>TruncatedGaussian</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>range</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>varargin</declname>
        </param>
        <briefdescription>
<para>X = TruncatedGaussian(sigma, range, n) </para>        </briefdescription>
        <detaileddescription>
<para>Purpose: generate a pseudo-random vector X of size n, X are drawn from the truncated Gaussian distribution in a RANGE braket; and satisfies std(X)=sigma. RANGE is of the form [left,right] defining the braket where X belongs. For a scalar input RANGE, the braket is [-RANGE,RANGE].</para><para>X = TruncatedGaussian(..., <computeroutput>double</computeroutput>) or X = TruncatedGaussian(..., <computeroutput>single</computeroutput>) return an array X of of the specified class.</para><para>If input SIGMA is negative, X will be forced to have the same &quot;shape&quot; of distribution function than the unbounded Gaussian with standard deviation -SIGMA: N(0,-SIGMA). It is similar to calling RANDN and throw away values ouside RANGE. In this case, the standard deviation of the truncated Gaussian will be different than -SIGMA. The <emphasis>effective</emphasis> mean and <simplesect kind="par"><title>the effective standard deviation can be obtained by calling</title><para>[X meaneffective sigmaeffective] = TruncatedGaussian(...)</para></simplesect>
<simplesect kind="par"><title>Example</title><para></para></simplesect>
sigma=2; range=[-3 5]</para><para>[X meaneff sigmaeff] = TruncatedGaussian(sigma, range, [1 1e6]);</para><para>stdX=std(X); <linebreak/>
&apos;,meaneff, mean(X)) <linebreak/>
&apos;, sigma, sigmaeff, stdX) hist(X,64)</para><para>Author: Bruno Luong <ulink url="mailto:brunoluong@yahoo.com">brunoluong@yahoo.com</ulink> Last update: 19/April/2009 12-Aug-2010, use asymptotic formula for unbalanced range to avoid round-off error issue </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" line="17" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" bodystart="17" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="_truncated_gaussian_8m_1a2c3f5770415ceb4e11fd1f93960dc890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, x &gt;</type>
        <definition>mlhsInnerSubst&lt;matlabtypesubstitute,x&gt; mtoc_subst_TruncatedGaussian_m_tsbus_cotm_asymcdfinv</definition>
        <argsstring>(matlabtypesubstitute y, matlabtypesubstitute erf1, matlabtypesubstitute de, matlabtypesubstitute a)</argsstring>
        <name>mtoc_subst_TruncatedGaussian_m_tsbus_cotm_asymcdfinv</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>y</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>erf1</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>de</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" line="193" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" bodystart="193" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="_truncated_gaussian_8m_1aabb0e054d924276658045a751720771e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, m &gt;</type>
        <definition>mlhsInnerSubst&lt;matlabtypesubstitute,m&gt; mtoc_subst_TruncatedGaussian_m_tsbus_cotm_meantrunc</definition>
        <argsstring>(matlabtypesubstitute lower, matlabtypesubstitute upper, matlabtypesubstitute s)</argsstring>
        <name>mtoc_subst_TruncatedGaussian_m_tsbus_cotm_meantrunc</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>upper</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" line="206" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" bodystart="206" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="_truncated_gaussian_8m_1a896c2f9b4f174c1a74fcbaba3aba8a04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, v &gt;</type>
        <definition>mlhsInnerSubst&lt;matlabtypesubstitute,v&gt; mtoc_subst_TruncatedGaussian_m_tsbus_cotm_vartrunc</definition>
        <argsstring>(matlabtypesubstitute lower, matlabtypesubstitute upper, matlabtypesubstitute s)</argsstring>
        <name>mtoc_subst_TruncatedGaussian_m_tsbus_cotm_vartrunc</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>upper</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" line="220" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" bodystart="220" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="_truncated_gaussian_8m_1adb0b500d3bd7906865c93d7582c1471a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, stdt &gt;</type>
        <definition>mlhsInnerSubst&lt;matlabtypesubstitute,stdt&gt; mtoc_subst_TruncatedGaussian_m_tsbus_cotm_stdtrunc</definition>
        <argsstring>(matlabtypesubstitute lower, matlabtypesubstitute upper, matlabtypesubstitute s)</argsstring>
        <name>mtoc_subst_TruncatedGaussian_m_tsbus_cotm_stdtrunc</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>upper</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" line="244" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" bodystart="244" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="_truncated_gaussian_8m_1ae0da2a4d57b558883ee165e69209b807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, res &gt;</type>
        <definition>mlhsInnerSubst&lt;matlabtypesubstitute,res&gt; mtoc_subst_TruncatedGaussian_m_tsbus_cotm_scz</definition>
        <argsstring>(matlabtypesubstitute sc, matlabtypesubstitute targetsigma2, matlabtypesubstitute lower, matlabtypesubstitute upper)</argsstring>
        <name>mtoc_subst_TruncatedGaussian_m_tsbus_cotm_scz</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>sc</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>targetsigma2</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" line="253" bodyfile="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m" bodystart="253" bodyend="261"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>X = TruncatedGaussian(sigma, range, n) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>(Autoinserted<sp/>by<sp/>mtoc++)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>source<sp/>code<sp/>has<sp/>been<sp/>filtered<sp/>by<sp/>the<sp/>mtoc++<sp/>executable,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>which<sp/>generates<sp/>code<sp/>that<sp/>can<sp/>be<sp/>processed<sp/>by<sp/>the<sp/>doxygen<sp/>documentation<sp/>tool.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>it<sp/>can<sp/>neither<sp/>be<sp/>interpreted<sp/>by<sp/>MATLAB,<sp/>nor<sp/>can<sp/>it<sp/>be<sp/>compiled<sp/>with<sp/>a<sp/>C++<sp/>compiler.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Except<sp/>for<sp/>the<sp/>comments,<sp/>the<sp/>function<sp/>bodies<sp/>of<sp/>your<sp/>M-file<sp/>functions<sp/>are<sp/>untouched.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Consequently,<sp/>the<sp/>FILTER_SOURCE_FILES<sp/>doxygen<sp/>switch<sp/>(default<sp/>in<sp/>our<sp/>Doxyfile.template)<sp/>will<sp/>produce</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>attached<sp/>source<sp/>files<sp/>that<sp/>are<sp/>highly<sp/>readable<sp/>by<sp/>humans.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Additionally,<sp/>links<sp/>in<sp/>the<sp/>doxygen<sp/>generated<sp/>documentation<sp/>to<sp/>the<sp/>source<sp/>code<sp/>of<sp/>functions<sp/>and<sp/>class<sp/>members<sp/>refer<sp/>to</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>the<sp/>correct<sp/>locations<sp/>in<sp/>the<sp/>source<sp/>code<sp/>browser.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>However,<sp/>the<sp/>line<sp/>numbers<sp/>most<sp/>likely<sp/>do<sp/>not<sp/>correspond<sp/>to<sp/>the<sp/>line<sp/>numbers<sp/>in<sp/>the<sp/>original<sp/>MATLAB<sp/>source<sp/>files.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="_truncated_gaussian_8m_1a17491b009e97e9422264d5694f887dee" refkind="member"><highlight class="normal">mlhsSubst&lt;mlhsInnerSubst&lt;matlabtypesubstitute,X&gt;<sp/>,mlhsInnerSubst&lt;matlabtypesubstitute,meaneffective&gt;<sp/>,mlhsInnerSubst&lt;matlabtypesubstitute,sigmaeffective&gt;<sp/>&gt;<sp/><ref refid="_truncated_gaussian_8m_1a17491b009e97e9422264d5694f887dee" kindref="member" tooltip="X = TruncatedGaussian(sigma, range, n)">TruncatedGaussian</ref>(matlabtypesubstitute<sp/>sigma,matlabtypesubstitute<sp/>range,matlabtypesubstitute<sp/>varargin)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>We<sp/>keep<sp/>track<sp/>this<sp/>variables<sp/>so<sp/>as<sp/>to<sp/>avoid<sp/>calling<sp/>fzero<sp/>if</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>TruncatedGaussian<sp/>is<sp/>called<sp/>succesively<sp/>with<sp/>the<sp/>same<sp/>sigma<sp/>and<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">persistent<sp/>PREVSIGMA<sp/>PREVRANGE<sp/>PREVSIGMAC</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>shape<sp/>preserving?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">shapeflag<sp/>=<sp/>(sigma&lt;0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Force<sp/>inputs<sp/>to<sp/>be<sp/>double<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">range<sp/>=<sp/>double(range);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isscalar(range)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>make<sp/>sure<sp/>it&apos;s<sp/>positive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>range=abs(range);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>range=[-range<sp/>range];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>range=sort(range);<sp/></highlight><highlight class="comment">/*<sp/><sp/>right<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">end</highlight></codeline>
<codeline lineno="37"><highlight class="normal">sigma<sp/>=<sp/>abs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(sigma));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">n=varargin;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>shapeflag</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Prevent<sp/>the<sp/>same<sp/>pdf<sp/>as<sp/>with<sp/>the<sp/>normal<sp/>distribution<sp/>N(0,sigma)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>sigmac<sp/>=<sp/>sigma;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>diff(range)^2&lt;12*sigma^2<sp/></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>imposes<sp/>a<sp/>limit<sp/>of<sp/>sigma<sp/>wrt<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warning(</highlight><highlight class="stringliteral">&quot;<sp/>TruncatedGaussian:RangeSigmaIncompatible<sp/>&quot;</highlight><highlight class="normal">,<sp/>...</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>TruncatedGaussian:<sp/>range<sp/>and<sp/>sigma<sp/>are<sp/>incompatible\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmac<sp/>=<sp/>Inf;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>elseif<sp/>isequal([sigma<sp/>range],<sp/>[PREVSIGMA<sp/>PREVRANGE])<sp/></highlight><highlight class="comment">/*<sp/><sp/>See<sp/>line<sp/>#80<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmac<sp/>=<sp/>PREVSIGMAC;<sp/></highlight><highlight class="comment">/*<sp/><sp/>Do<sp/>not<sp/>need<sp/>to<sp/>call<sp/>fzero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Search<sp/>for<sp/>&quot;sigmac&quot;<sp/>such<sp/>that<sp/>the<sp/>truncated<sp/>Gaussian<sp/>having</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sigmac<sp/>in<sp/>the<sp/>formula<sp/>of<sp/>its<sp/>pdf<sp/>gives<sp/>a<sp/>standard<sp/>deviation</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>equal<sp/>to<sp/>sigma<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[sigmac<sp/>res<sp/>flag]<sp/>=<sp/>fzero(@scz,sigma,[],...</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma^2,range(1),range(2));<sp/></highlight><highlight class="comment">/*<sp/>#ok<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigmac<sp/>=<sp/>abs(sigmac);<sp/></highlight><highlight class="comment">/*<sp/><sp/>Force<sp/>it<sp/>to<sp/>be<sp/>positive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag&lt;0<sp/></highlight><highlight class="comment">/*<sp/><sp/>Someting<sp/>is<sp/>wrong<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;<sp/>TruncatedGaussian:fzerofailled<sp/>&quot;</highlight><highlight class="normal">,<sp/>...</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>Could<sp/>not<sp/>estimate<sp/>sigmac\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Backup<sp/>the<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[PREVSIGMA<sp/>PREVRANGE<sp/>PREVSIGMAC]<sp/>=<sp/>deal(sigma,range,sigmac);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="71"><highlight class="normal">end</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Compute<sp/>effective<sp/>standard<sp/>deviation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">meaneffective=meantrunc(range(1),<sp/>range(2),<sp/>sigmac);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">sigmaeffective=stdtrunc(range(1),<sp/>range(2),<sp/>sigmac);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Inverse<sp/>of<sp/>the<sp/>cdf<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinf(sigmac)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Uniform<sp/>distribution<sp/>to<sp/>maximize<sp/>the<sp/>standard<sp/>deviation<sp/>within<sp/>the</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>range.<sp/>It<sp/>is<sp/>like<sp/>a<sp/>Gaussian<sp/>with<sp/>infinity<sp/>standard<sp/>deviation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>any(strcmpi(n,</highlight><highlight class="stringliteral">&quot;<sp/>single<sp/>&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range<sp/>=<sp/>single(range);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>cdfinv<sp/>=<sp/>@(y)<sp/>range(1)+y*diff(range);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>sqrt(2)*sigmac;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>rn<sp/>=<sp/>range/c;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>asymthreshold<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>any(strcmpi(n,</highlight><highlight class="stringliteral">&quot;<sp/>single<sp/>&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>cdfinv<sp/>will<sp/>be<sp/>single<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>single(c);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>e<sp/>=<sp/>single(e);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Unbalanced<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>prod(sign(rn))&gt;0<sp/>&amp;&amp;<sp/>all(abs(rn)&gt;=asymthreshold)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Use<sp/>asymptotic<sp/>expansion</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>based<sp/>on<sp/>a<sp/>Sergei<sp/>Winitzi&apos;s<sp/>paper<sp/>&quot;A<sp/>handly<sp/>approximation<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>error<sp/>function<sp/>and<sp/>its<sp/>inverse&quot;,<sp/>Feb<sp/>6,<sp/>2008.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c*sign(rn(1));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rn<sp/>=<sp/>abs(rn);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>min(rn);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>max(rn);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>0.147;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>left*left;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax2<sp/>=<sp/>a*x2;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e1<sp/>=<sp/>(4/pi+ax2)<sp/>./<sp/>(1+ax2);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e1<sp/>=<sp/>exp(-x2.*e1);<sp/></highlight><highlight class="comment">/*<sp/><sp/>e1<sp/>&lt;<sp/>3.0539e-008<sp/>for<sp/>asymthreshold<sp/>=<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>right*right;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax2<sp/>=<sp/>a*x2;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e2<sp/>=<sp/>(4/pi+ax2)<sp/>./<sp/>(1+ax2);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e2<sp/>=<sp/>exp(-x2.*e2);<sp/></highlight><highlight class="comment">/*<sp/><sp/>e2<sp/>&lt;<sp/>3.0539e-008<sp/>for<sp/>asymthreshold<sp/>=<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Taylor<sp/>series<sp/>of<sp/>erf(right)-erf(left)<sp/>~=<sp/>sqrt(1-e2)-sqrt(1-e1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de<sp/>=<sp/><sp/>-0.5*(e2-e1)<sp/>-0.125*(e2-e1)*(e2+e1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Taylor<sp/>series<sp/>of<sp/>erf1<sp/>:=<sp/>erf(left)-1<sp/>~=<sp/>sqrt(1-e1)-1<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>erf1<sp/>=<sp/>(-0.5*e1<sp/>-<sp/>0.125*e1^2);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdfinv<sp/>=<sp/>@(y)<sp/>c*asymcdfinv(y,<sp/>erf1,<sp/>de,<sp/>a);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>erf(range/c);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdfinv<sp/>=<sp/>@(y)<sp/>c*erfinv(e(1)+diff(e)*y);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="133"><highlight class="normal">end</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Generate<sp/>random<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">X<sp/>=<sp/>cdfinv(rand(n[:]));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Clip<sp/>to<sp/>prevent<sp/>some<sp/>nasty<sp/>numerical<sp/>issues<sp/>with<sp/>of<sp/>erfinv<sp/>function</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>when<sp/>argument<sp/>gets<sp/>close<sp/>to<sp/>+/-1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">X<sp/>=<sp/>max(min(X,range(2)),range(1));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">end<sp/></highlight><highlight class="comment">/*<sp/><sp/>TruncatedGaussian<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193" refid="_truncated_gaussian_8m_1a2c3f5770415ceb4e11fd1f93960dc890" refkind="member"><highlight class="normal">mlhsInnerSubst&lt;matlabtypesubstitute,x&gt;<sp/><ref refid="_truncated_gaussian_8m_1a2c3f5770415ceb4e11fd1f93960dc890" kindref="member">mtoc_subst_TruncatedGaussian_m_tsbus_cotm_asymcdfinv</ref>(matlabtypesubstitute<sp/>y,matlabtypesubstitute<sp/>erf1,matlabtypesubstitute<sp/>de,matlabtypesubstitute<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal">f<sp/>=<sp/>erf1<sp/>+<sp/>de*y;<sp/></highlight><highlight class="comment">/*<sp/><sp/>=<sp/>z<sp/>-<sp/>1;<sp/>thus<sp/>z<sp/>=<sp/>1+f</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>1<sp/>-<sp/>z^2<sp/>=<sp/>-2f-f^2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">l<sp/>=<sp/>log(-f.*(2<sp/>+<sp/>f));<sp/></highlight><highlight class="comment">/*<sp/><sp/>log(-2f-f^2)<sp/>=<sp/>log(1-z.^2);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">b<sp/>=<sp/>2/(pi*a)<sp/>+<sp/>l/2;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">x<sp/>=<sp/>sqrt(-b<sp/>+<sp/>sqrt(b.^2-l/a));</highlight></codeline>
<codeline lineno="201"><highlight class="normal">end<sp/></highlight><highlight class="comment">/*<sp/><sp/>asymcdfinv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="_truncated_gaussian_8m_1aabb0e054d924276658045a751720771e" refkind="member"><highlight class="normal">mlhsInnerSubst&lt;matlabtypesubstitute,m&gt;<sp/><ref refid="_truncated_gaussian_8m_1aabb0e054d924276658045a751720771e" kindref="member">mtoc_subst_TruncatedGaussian_m_tsbus_cotm_meantrunc</ref>(matlabtypesubstitute<sp/>lower,matlabtypesubstitute<sp/>upper,matlabtypesubstitute<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinf(s)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(upper+lower)/2;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(lower/sqrt(2))./s;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(upper/sqrt(2))./s;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>corr<sp/>=<sp/>sqrt(2/pi)*(-exp(-b.^2)+exp(-a.^2))./(erf(b)-erf(a));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>s.*corr;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">end</highlight></codeline>
<codeline lineno="215"><highlight class="normal">end<sp/></highlight><highlight class="comment">/*<sp/><sp/>vartrunc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="_truncated_gaussian_8m_1a896c2f9b4f174c1a74fcbaba3aba8a04" refkind="member"><highlight class="normal">mlhsInnerSubst&lt;matlabtypesubstitute,v&gt;<sp/><ref refid="_truncated_gaussian_8m_1a896c2f9b4f174c1a74fcbaba3aba8a04" kindref="member">mtoc_subst_TruncatedGaussian_m_tsbus_cotm_vartrunc</ref>(matlabtypesubstitute<sp/>lower,matlabtypesubstitute<sp/>upper,matlabtypesubstitute<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinf(s)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(upper-lower)^2/12;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(lower/sqrt(2))./s;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(upper/sqrt(2))./s;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinf(a)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ea=0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ea<sp/>=<sp/>a.*exp(-a.^2);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinf(b)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>=<sp/>b.*exp(-b.^2);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>corr<sp/>=<sp/>1<sp/>-<sp/>(2/sqrt(pi))*(eb-ea)./(erf(b)-erf(a));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>s.^2.*corr;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">end</highlight></codeline>
<codeline lineno="239"><highlight class="normal">end<sp/></highlight><highlight class="comment">/*<sp/><sp/>vartrunc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="_truncated_gaussian_8m_1adb0b500d3bd7906865c93d7582c1471a" refkind="member"><highlight class="normal">mlhsInnerSubst&lt;matlabtypesubstitute,stdt&gt;<sp/><ref refid="_truncated_gaussian_8m_1adb0b500d3bd7906865c93d7582c1471a" kindref="member">mtoc_subst_TruncatedGaussian_m_tsbus_cotm_stdtrunc</ref>(matlabtypesubstitute<sp/>lower,matlabtypesubstitute<sp/>upper,matlabtypesubstitute<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal">arg<sp/>=<sp/>vartrunc(lower,<sp/>upper,<sp/>s)-meantrunc(lower,<sp/>upper,<sp/>s).^2;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>arg<sp/>=<sp/>max(arg,0);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">stdt<sp/>=<sp/>sqrt(arg);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">end<sp/></highlight><highlight class="comment">/*<sp/><sp/>stdtrunc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="_truncated_gaussian_8m_1ae0da2a4d57b558883ee165e69209b807" refkind="member"><highlight class="normal">mlhsInnerSubst&lt;matlabtypesubstitute,res&gt;<sp/><ref refid="_truncated_gaussian_8m_1ae0da2a4d57b558883ee165e69209b807" kindref="member">mtoc_subst_TruncatedGaussian_m_tsbus_cotm_scz</ref>(matlabtypesubstitute<sp/>sc,matlabtypesubstitute<sp/>targetsigma2,matlabtypesubstitute<sp/>lower,matlabtypesubstitute<sp/>upper)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal">res<sp/>=<sp/>vartrunc(lower,<sp/>upper,<sp/>sc)<sp/>-<sp/>targetsigma2<sp/>-<sp/>...</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meantrunc(lower,<sp/>upper,<sp/>sc).^2;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">end<sp/></highlight><highlight class="comment">/*<sp/><sp/>scz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>End<sp/>of<sp/>file<sp/>TruncatedGaussian.m<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/Dropbox/MatlabToolkits/ivis/src/ivis_util/TruncatedGaussian.m"/>
  </compounddef>
</doxygen>
