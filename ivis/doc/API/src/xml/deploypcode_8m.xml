<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="deploypcode_8m" kind="file">
    <compoundname>deploypcode.m</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="deploypcode_8m_1aa8d85e1b3dbe7b553787f1f62c6c60e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>noret::substitute</type>
        <definition>noret::substitute deploypcode</definition>
        <argsstring>(matlabtypesubstitute source_dir, matlabtypesubstitute target_dir, matlabtypesubstitute varargin)</argsstring>
        <name>deploypcode</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>source_dir</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>target_dir</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>varargin</declname>
        </param>
        <briefdescription>
<para>DEPLOYPCODE recursively creates p-code versions of m-files in a given folder. </para>        </briefdescription>
        <detaileddescription>
<para>DEPLOYPCODE(SOURCE, TARGET) will recursively search the SOURCE folder for all .m files and deploy them as P-files to the TARGET folder using default options below.</para><para>DEPLOYPCODE(..., <computeroutput>PropertyName</computeroutput>,VALUE,<computeroutput>PropertyName</computeroutput>,VALUE,...) uses the following options <simplesect kind="par"><title>when deploying p-code</title><para></para></simplesect>
<computeroutput>recurse</computeroutput> - When true (default) will recursively deploy p-code from SOURCE folder.</para><para><computeroutput>ignoreStrings</computeroutput> - String or cell array of strings of filenames to ignore. Regular expression syntax is used.</para><para><computeroutput>ignoreSVN</computeroutput> - Additional true/false option to ignore &quot;.svn&quot; directories. Equivalent to adding {<computeroutput>^.svn$</computeroutput>} to &quot;ignoreStrings&quot;. Defaults to TRUE for convenience.</para><para><computeroutput>includeHelp</computeroutput> - MATLAB&apos;s pcode() removes all comments including the help section from files when run. Setting this option to true (default) will export an additional .m file containing only the help contents of the file being deployed. This means that myFunction.m will be deployed to myFunction.p, but calling &quot;help myFunction&quot; will still return help text.</para><para><computeroutput>updateOnly</computeroutput> - When true, destination p-files will only be created if they don&apos;t yet exist or are older than the m-file being encoded. Defaults to false.</para><para><computeroutput>copyDirectStrings</computeroutput> - String or cell array of strings of filenames to copy directly to TARGET folder without encryption. Regular expression syntax is used.</para><para><computeroutput>copyFigFiles</computeroutput> - Additional true/false option to copy &quot;.fig&quot; files directly. Equivalent to adding {<computeroutput>.fig$</computeroutput>} to &quot;copyDirectStrings&quot;. Defaults TRUE for convenience. <computeroutput>copyDllFiles</computeroutput> - Additional true/false option to copy &quot;.dll&quot; files directly. Equivalent to adding {<computeroutput>.dll$</computeroutput>} to &quot;copyDirectStrings&quot;. Defaults TRUE for convenience. <computeroutput>copyMexFiles</computeroutput> - Additional true/false option to copy mex files directly. Defaults TRUE for convenience.</para><para><computeroutput>flattenFileTree</computeroutput> - When true (default), regular m-files are deployed as p-files only to the TARGET folder initially provided (rather than under any subdirectories). When this option is set to FALSE, the file structure under the SOURCE directory will be replicated at the TARGET.</para><para><simplesect kind="par"><title>Example</title><para>deploypcode(&apos;C:&apos;,<computeroutput>U:</computeroutput>,<computeroutput>updateOnly</computeroutput>,true)</para></simplesect>
written by Sven Holcombe Oct 2011</para><para>PJ modified to ignore .gitignore directories</para><para><computeroutput>gitignore</computeroutput> - if a .gitignore file name is supplied then will ignore the directories as specified (file exclusion not actually used since currently only copies .m files! Directory patterns only used if not using a flat file tree) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" line="17" bodyfile="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" bodystart="17" bodyend="44"/>
        <referencedby refid="_r_u_n___m_e_8m_1a543d1140deebeb0a247d2c4a9393691a" compoundref="_r_u_n___m_e_8m" startline="17" endline="65">RUN_ME</referencedby>
      </memberdef>
      <memberdef kind="function" id="deploypcode_8m_1ac528d92c04798d1ddc194ed1ba066d21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>noret::substitute</type>
        <definition>noret::substitute mtoc_subst_deploypcode_m_tsbus_cotm_deployPcodeRecurse</definition>
        <argsstring>(matlabtypesubstitute sourceDir, matlabtypesubstitute destDir, matlabtypesubstitute options)</argsstring>
        <name>mtoc_subst_deploypcode_m_tsbus_cotm_deployPcodeRecurse</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>sourceDir</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>destDir</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" line="106" bodyfile="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" bodystart="106" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="deploypcode_8m_1aa1e7f6d69d9059386508bd2cfa106a08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, inPath &gt;</type>
        <definition>mlhsInnerSubst&lt;matlabtypesubstitute,inPath&gt; mtoc_subst_deploypcode_m_tsbus_cotm_getFullPathStr</definition>
        <argsstring>(matlabtypesubstitute inPath)</argsstring>
        <name>mtoc_subst_deploypcode_m_tsbus_cotm_getFullPathStr</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>inPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" line="227" bodyfile="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" bodystart="227" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="deploypcode_8m_1ab1f3966609717e54b3ea38b78d217858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, txt &gt;</type>
        <definition>mlhsInnerSubst&lt;matlabtypesubstitute,txt&gt; mtoc_subst_deploypcode_m_tsbus_cotm_writeHelpMfile</definition>
        <argsstring>(matlabtypesubstitute filename, matlabtypesubstitute fun)</argsstring>
        <name>mtoc_subst_deploypcode_m_tsbus_cotm_writeHelpMfile</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>fun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" line="236" bodyfile="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" bodystart="236" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="deploypcode_8m_1ab9ae73bd152ec3ac5e0e1582f4b1f439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>noret::substitute</type>
        <definition>noret::substitute mtoc_subst_deploypcode_m_tsbus_cotm_touchFile</definition>
        <argsstring>(matlabtypesubstitute fname)</argsstring>
        <name>mtoc_subst_deploypcode_m_tsbus_cotm_touchFile</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" line="250" bodyfile="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" bodystart="250" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="deploypcode_8m_1a0005f2f534b9968b8c459f5b4e796fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mlhsInnerSubst&lt; matlabtypesubstitute, options &gt;</type>
        <definition>mlhsInnerSubst&lt;matlabtypesubstitute,options&gt; mtoc_subst_deploypcode_m_tsbus_cotm_processInputs</definition>
        <argsstring>(matlabtypesubstitute varargin)</argsstring>
        <name>mtoc_subst_deploypcode_m_tsbus_cotm_processInputs</name>
        <param>
          <type>matlabtypesubstitute</type>
          <declname>varargin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" line="264" bodyfile="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m" bodystart="264" bodyend="344"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>DEPLOYPCODE recursively creates p-code versions of m-files in a given folder. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>(Autoinserted<sp/>by<sp/>mtoc++)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>source<sp/>code<sp/>has<sp/>been<sp/>filtered<sp/>by<sp/>the<sp/>mtoc++<sp/>executable,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>which<sp/>generates<sp/>code<sp/>that<sp/>can<sp/>be<sp/>processed<sp/>by<sp/>the<sp/>doxygen<sp/>documentation<sp/>tool.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>it<sp/>can<sp/>neither<sp/>be<sp/>interpreted<sp/>by<sp/>MATLAB,<sp/>nor<sp/>can<sp/>it<sp/>be<sp/>compiled<sp/>with<sp/>a<sp/>C++<sp/>compiler.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Except<sp/>for<sp/>the<sp/>comments,<sp/>the<sp/>function<sp/>bodies<sp/>of<sp/>your<sp/>M-file<sp/>functions<sp/>are<sp/>untouched.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Consequently,<sp/>the<sp/>FILTER_SOURCE_FILES<sp/>doxygen<sp/>switch<sp/>(default<sp/>in<sp/>our<sp/>Doxyfile.template)<sp/>will<sp/>produce</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>attached<sp/>source<sp/>files<sp/>that<sp/>are<sp/>highly<sp/>readable<sp/>by<sp/>humans.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Additionally,<sp/>links<sp/>in<sp/>the<sp/>doxygen<sp/>generated<sp/>documentation<sp/>to<sp/>the<sp/>source<sp/>code<sp/>of<sp/>functions<sp/>and<sp/>class<sp/>members<sp/>refer<sp/>to</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>the<sp/>correct<sp/>locations<sp/>in<sp/>the<sp/>source<sp/>code<sp/>browser.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>However,<sp/>the<sp/>line<sp/>numbers<sp/>most<sp/>likely<sp/>do<sp/>not<sp/>correspond<sp/>to<sp/>the<sp/>line<sp/>numbers<sp/>in<sp/>the<sp/>original<sp/>MATLAB<sp/>source<sp/>files.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="deploypcode_8m_1aa8d85e1b3dbe7b553787f1f62c6c60e3" refkind="member"><highlight class="normal">noret::substitute<sp/><ref refid="deploypcode_8m_1aa8d85e1b3dbe7b553787f1f62c6c60e3" kindref="member" tooltip="DEPLOYPCODE recursively creates p-code versions of m-files in a given folder.">deploypcode</ref>(matlabtypesubstitute<sp/>source_dir,matlabtypesubstitute<sp/>target_dir,matlabtypesubstitute<sp/><ref refid="classvarargin" kindref="compound" tooltip="A variable number of input arguments.">varargin</ref>)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>%<sp/>Find<sp/>folders<sp/>under<sp/>search_dir</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>MATLAB<sp/>only<sp/>writes<sp/>pcode<sp/>to<sp/>pwd,<sp/>so<sp/>we<sp/>*need*<sp/>fully<sp/>qualified<sp/>paths</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">source_dir<sp/>=<sp/>getFullPathStr(source_dir);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">target_dir<sp/>=<sp/>getFullPathStr(target_dir);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">assert(exist(source_dir,</highlight><highlight class="stringliteral">&quot;<sp/>dir<sp/>&quot;</highlight><highlight class="normal">)==7,</highlight><highlight class="stringliteral">&quot;<sp/>Source<sp/>directory<sp/>%s<sp/>does<sp/>not<sp/>exist<sp/>&quot;</highlight><highlight class="normal">,source_dir)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">assert(exist(target_dir,</highlight><highlight class="stringliteral">&quot;<sp/>dir<sp/>&quot;</highlight><highlight class="normal">)==7,</highlight><highlight class="stringliteral">&quot;<sp/>Target<sp/>directory<sp/>%s<sp/>does<sp/>not<sp/>exist<sp/>&quot;</highlight><highlight class="normal">,target_dir)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Gather<sp/>options<sp/>from<sp/>user<sp/>inputs</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">options<sp/>=<sp/>processInputs(varargin[:]);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Start<sp/>p-coding<sp/>recursively.<sp/>If<sp/>options.recurse<sp/>is<sp/>false,<sp/>it<sp/>will<sp/>exit<sp/>after<sp/>the<sp/>source_dir</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">originalDir<sp/>=<sp/>pwd;<sp/></highlight><highlight class="comment">/*<sp/><sp/>Pcode<sp/>only<sp/>exports<sp/>only<sp/>to<sp/>pwd.<sp/>We<sp/>need<sp/>to<sp/>remember<sp/>our<sp/>starting<sp/>directory.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">deployPcodeRecurse(source_dir,<sp/>target_dir,<sp/>options)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">cd(originalDir)<sp/></highlight><highlight class="comment">/*<sp/><sp/>Return<sp/>to<sp/>the<sp/>caller&apos;s<sp/>directory</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">end</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106" refid="deploypcode_8m_1ac528d92c04798d1ddc194ed1ba066d21" refkind="member"><highlight class="normal">noret::substitute<sp/><ref refid="deploypcode_8m_1ac528d92c04798d1ddc194ed1ba066d21" kindref="member">mtoc_subst_deploypcode_m_tsbus_cotm_deployPcodeRecurse</ref>(matlabtypesubstitute<sp/>sourceDir,matlabtypesubstitute<sp/>destDir,matlabtypesubstitute<sp/>options)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>~isequal(pwd,destDir)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>~options.flattenFileTree<sp/>&amp;&amp;<sp/>~exist(destDir,</highlight><highlight class="stringliteral">&quot;<sp/>dir<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warning(</highlight><highlight class="stringliteral">&quot;<sp/>deploypcode:missingDir<sp/>&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;<sp/>Directory<sp/>&apos;%s&apos;<sp/>did<sp/>not<sp/>exist<sp/>so<sp/>will<sp/>be<sp/>created<sp/>&quot;</highlight><highlight class="normal">,destDir)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mkdir(destDir)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd(destDir);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Search<sp/>the<sp/>sourceDir,<sp/>excluding<sp/>any<sp/>requested<sp/>entries.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">files<sp/>=<sp/>dir(sourceDir);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>files(~cellfun(@isempty,regexp([files.name],<sp/>options.excludeRegexpString<sp/>,</highlight><highlight class="stringliteral">&quot;<sp/>once<sp/>&quot;</highlight><highlight class="normal">)))<sp/>=<sp/>[];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isempty(files)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Get<sp/>masks<sp/>into<sp/>M-FILES<sp/>and<sp/>STRAIGHT-COPY-FILES</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>dirMask<sp/>=<sp/>[files.isdir];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>mfileMask<sp/>=<sp/>~dirMask<sp/>&amp;<sp/>~cellfun(@isempty,regexp([files.name],</highlight><highlight class="stringliteral">&quot;<sp/>\.m$<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>copyFileMask<sp/>=<sp/>~dirMask<sp/>&amp;<sp/>~cellfun(@isempty,regexp([files.name],options.copyDirectString));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>Analysing<sp/>&apos;%s&apos;:\n(%d<sp/>.Ms,<sp/>%d<sp/>COPYs,<sp/>%d<sp/>sub-dirs)\n<sp/>&quot;</highlight><highlight class="normal">,sourceDir,<sp/>nnz(mfileMask),<sp/>nnz(copyFileMask),<sp/>nnz(dirMask))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>M-FILES:<sp/>Create<sp/>P-Code<sp/>for<sp/>all<sp/>non-ignored<sp/>.m<sp/>files<sp/>in<sp/>this<sp/>directory</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>[~,<sp/>sourceImplicitDirs]<sp/>=<sp/>helpUtils.separateImplicitDirs(sourceDir);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>destNonImlicitDir<sp/>=<sp/>helpUtils.separateImplicitDirs(destDir);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>writeDir<sp/>=<sp/>fullfile(destNonImlicitDir,sourceImplicitDirs);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Sneakily<sp/>force<sp/>the<sp/>@class<sp/>constructor<sp/>to<sp/>be<sp/>p-coded<sp/>first<sp/>(avoids<sp/>an<sp/>annoying<sp/>MATLAB<sp/>warning)</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>mFileInds<sp/>=<sp/>find(mfileMask);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>[~,sortInds]<sp/>=<sp/>sort(strcmp([sourceImplicitDirs(2:end)<sp/></highlight><highlight class="stringliteral">&quot;<sp/>.m<sp/>&quot;</highlight><highlight class="normal">],[files(mFileInds).name]),</highlight><highlight class="stringliteral">&quot;<sp/>descend<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i=mFileInds(sortInds)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>P-coding<sp/>FILE:<sp/><sp/>%s<sp/>...<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>files(i).name)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readFromMFileStr<sp/>=<sp/>fullfile(sourceDir,<sp/>files(i).name);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeToMFileStr<sp/>=<sp/>fullfile(writeDir,files(i).name);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeToPFileStr<sp/>=<sp/>[writeToMFileStr(1:end-1)<sp/>&quot;<sp/>p<sp/>&quot;];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.updateOnly</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFile<sp/>=<sp/>dir(writeToPFileStr);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>~isempty(pFile)<sp/>&amp;&amp;<sp/>pFile.datenum<sp/>&gt;<sp/>files(i).datenum</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>already<sp/>up<sp/>to<sp/>date.\n<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Wrap<sp/>the<sp/>p-code<sp/>call<sp/>in<sp/>a<sp/>try-catch<sp/>statement<sp/>in<sp/>case<sp/>the<sp/>m-file</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>question<sp/>has<sp/>errors<sp/>in<sp/>it.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcode(readFromMFileStr)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>ME</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warning(</highlight><highlight class="stringliteral">&quot;<sp/>deploypcode:touch<sp/>&quot;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&quot;<sp/>Cannot<sp/>create<sp/>p-code<sp/>for<sp/>file<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>escape(files(i).name)<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>in<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>sourceDir])</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disp(ME)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcode(readFromMFileStr)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helpDebugStr<sp/>=<sp/>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.includeHelp</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Output<sp/>a<sp/>shadow<sp/>filename.m<sp/>file<sp/>with<sp/>the<sp/>helptext<sp/>from<sp/>the<sp/>original<sp/>filename.m</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txt<sp/>=<sp/>writeHelpMfile(fullfile(writeDir,files(i).name),<sp/>readFromMFileStr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isempty(txt)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helpDebugStr<sp/>=<sp/>sprintf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>No<sp/>help<sp/>found<sp/>for<sp/>%s<sp/>&quot;</highlight><highlight class="normal">,readFromMFileStr);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Avoid<sp/>MATLAB&apos;s<sp/>pfile-older-than-mfile<sp/>warning:<sp/>re-touch<sp/>.p<sp/>file<sp/>if<sp/>older<sp/>than<sp/>.m</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFile<sp/>=<sp/>dir(writeToPFileStr);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFile<sp/>=<sp/>dir(fullfile(writeDir,files(i).name));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pFile.datenum<sp/>&lt;<sp/>mFile.datenum</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchFile(writeToPFileStr)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>\n%s\t<sp/>(%f)\n<sp/>&quot;</highlight><highlight class="normal">,<sp/>files(i).name,<sp/><sp/>pFile.datenum-mFile.datenum)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFile<sp/>=<sp/>dir(writeToPFileStr);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pFile.datenum<sp/>&lt;<sp/>mFile.datenum</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Wow,<sp/>it&apos;s<sp/>STILL<sp/>older.<sp/>Last<sp/>try:<sp/>delete,<sp/>then<sp/>re-pcode<sp/>it</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(writeToPFileStr)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcode(readFromMFileStr)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>\n%s\t<sp/>(%f)\n<sp/>&quot;</highlight><highlight class="normal">,<sp/>files(i).name,<sp/><sp/>pFile.datenum-mFile.datenum)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFile<sp/>=<sp/>dir(writeToPFileStr);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helpDebugStr<sp/>=<sp/>sprintf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>%d<sp/>chars<sp/>written<sp/>to<sp/>help<sp/>file<sp/>&quot;</highlight><highlight class="normal">,numel(txt));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>\n%s\t<sp/>(%f)\n<sp/>&quot;</highlight><highlight class="normal">,<sp/>files(i).name,<sp/><sp/>pFile.datenum-mFile.datenum)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>done.<sp/>%s\n<sp/>&quot;</highlight><highlight class="normal">,helpDebugStr)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>FIG-FILES:<sp/>Copy<sp/>over<sp/>any<sp/>.fig<sp/>files<sp/>in<sp/>this<sp/>directory</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>~isempty(options.copyDirectStrings)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i=find(copyFileMask)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>Copying:<sp/><sp/>%s<sp/>...<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>files(i).name)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyfile(fullfile(sourceDir,<sp/>files(i).name),<sp/>destDir)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(</highlight><highlight class="stringliteral">&quot;<sp/>done.\n<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>SUB-DIRECTORIES:<sp/>Recursively<sp/>follow<sp/>any<sp/>subdirectories<sp/>if<sp/>options.recurse<sp/>is<sp/>set.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.recurse</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirs<sp/>=<sp/>files(dirMask);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i=1:length(dirs)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.flattenFileTree</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextDestDir<sp/>=<sp/>destDir;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextDestDir<sp/>=<sp/>fullfile(destDir,<sp/>dirs(i).name);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deployPcodeRecurse(fullfile(sourceDir,<sp/>dirs(i).name),nextDestDir,options)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="219"><highlight class="normal">end<sp/></highlight><highlight class="comment">/*<sp/><sp/>deployPcodeRecurse</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>%<sp/>Utility<sp/>routines</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="deploypcode_8m_1aa1e7f6d69d9059386508bd2cfa106a08" refkind="member"><highlight class="normal">mlhsInnerSubst&lt;matlabtypesubstitute,inPath&gt;<sp/><ref refid="deploypcode_8m_1aa1e7f6d69d9059386508bd2cfa106a08" kindref="member">mtoc_subst_deploypcode_m_tsbus_cotm_getFullPathStr</ref>(matlabtypesubstitute<sp/>inPath)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>inPath<sp/>=<sp/>fullfile(inPath);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>~any(regexp(inPath,[</highlight><highlight class="stringliteral">&quot;<sp/>^(\w:)?\<sp/>&quot;</highlight><highlight class="normal"><sp/>filesep]))</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inPath<sp/>=<sp/>fullfile(pwd,<sp/>inPath);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="232"><highlight class="normal">end</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="deploypcode_8m_1ab1f3966609717e54b3ea38b78d217858" refkind="member"><highlight class="normal">mlhsInnerSubst&lt;matlabtypesubstitute,txt&gt;<sp/><ref refid="deploypcode_8m_1ab1f3966609717e54b3ea38b78d217858" kindref="member">mtoc_subst_deploypcode_m_tsbus_cotm_writeHelpMfile</ref>(matlabtypesubstitute<sp/>filename,matlabtypesubstitute<sp/>fun)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal">txt<sp/>=<sp/>help(fun);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isempty(txt),<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>end</highlight></codeline>
<codeline lineno="239"><highlight class="normal">txtLineByLine<sp/>=<sp/>strcat(</highlight><highlight class="stringliteral">&quot;<sp/>%<sp/>&quot;</highlight><highlight class="normal">,regexp(txt,</highlight><highlight class="stringliteral">&quot;<sp/>\n<sp/>&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;<sp/>split<sp/>&quot;</highlight><highlight class="normal">)^t);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">fid<sp/>=<sp/>fopen(filename,</highlight><highlight class="stringliteral">&quot;<sp/>w<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fid<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>error(</highlight><highlight class="stringliteral">&quot;<sp/>Unable<sp/>to<sp/>write<sp/>to<sp/>%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">end</highlight></codeline>
<codeline lineno="244"><highlight class="normal">fprintf(fid,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%s\n<sp/>&quot;</highlight><highlight class="normal">,txtLineByLine[:]);</highlight></codeline>
<codeline lineno="245"><highlight class="normal">fclose(fid);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">end</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="deploypcode_8m_1ab9ae73bd152ec3ac5e0e1582f4b1f439" refkind="member"><highlight class="normal">noret::substitute<sp/><ref refid="deploypcode_8m_1ab9ae73bd152ec3ac5e0e1582f4b1f439" kindref="member">mtoc_subst_deploypcode_m_tsbus_cotm_touchFile</ref>(matlabtypesubstitute<sp/>fname)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal">compType<sp/>=<sp/>computer;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>compType(1:3)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/>PCW<sp/>&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>sprintf(</highlight><highlight class="stringliteral">&quot;<sp/>copy<sp/>/b<sp/>&apos;%s&apos;<sp/>+,,<sp/>&quot;</highlight><highlight class="normal">,fname);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>[&quot;<sp/>GLN<sp/>&quot;,&quot;<sp/>MAC<sp/>&quot;],<sp/>cmd<sp/>=<sp/>sprintf(</highlight><highlight class="stringliteral">&quot;<sp/>touch<sp/>&apos;%s&apos;<sp/>&quot;</highlight><highlight class="normal">,fname);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">end</highlight></codeline>
<codeline lineno="256"><highlight class="normal">[okZero,msg]<sp/>=<sp/>system(cmd);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>okZero~=0</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>warning(</highlight><highlight class="stringliteral">&quot;<sp/>deploypcode:touch<sp/>&quot;</highlight><highlight class="normal">,<sp/>msg)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">end</highlight></codeline>
<codeline lineno="260"><highlight class="normal">end</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="deploypcode_8m_1a0005f2f534b9968b8c459f5b4e796fd6" refkind="member"><highlight class="normal">mlhsInnerSubst&lt;matlabtypesubstitute,options&gt;<sp/><ref refid="deploypcode_8m_1a0005f2f534b9968b8c459f5b4e796fd6" kindref="member">mtoc_subst_deploypcode_m_tsbus_cotm_processInputs</ref>(matlabtypesubstitute<sp/><ref refid="classvarargin" kindref="compound" tooltip="A variable number of input arguments.">varargin</ref>)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">IP.addParamValue(</highlight><highlight class="stringliteral">&apos;recurse&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,@(x)sum(x==[0<sp/>1]))</highlight></codeline>
<codeline lineno="267"><highlight class="normal">IP.addParamValue(</highlight><highlight class="stringliteral">&apos;ignoreStrings&apos;</highlight><highlight class="normal">,{},@(x)iscellstr(x)<sp/>||<sp/>ischar(x))</highlight></codeline>
<codeline lineno="268"><highlight class="normal">IP.addParamValue(</highlight><highlight class="stringliteral">&apos;ignoreSVN&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,@(x)sum(x==[0<sp/>1]))</highlight></codeline>
<codeline lineno="269"><highlight class="normal">IP.addParamValue(</highlight><highlight class="stringliteral">&apos;includeHelp&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,@(x)sum(x==[0<sp/>1]))</highlight></codeline>
<codeline lineno="270"><highlight class="normal">IP.addParamValue(</highlight><highlight class="stringliteral">&apos;flattenFileTree&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,@(x)sum(x==[0<sp/>1]))</highlight></codeline>
<codeline lineno="271"><highlight class="normal">IP.addParamValue(</highlight><highlight class="stringliteral">&apos;copyFigFiles&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,@(x)sum(x==[0<sp/>1]))</highlight></codeline>
<codeline lineno="272"><highlight class="normal">IP.addParamValue(</highlight><highlight class="stringliteral">&apos;copyMexFiles&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,@(x)sum(x==[0<sp/>1]))</highlight></codeline>
<codeline lineno="273"><highlight class="normal">IP.addParamValue(</highlight><highlight class="stringliteral">&apos;copyDllFiles&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,@(x)sum(x==[0<sp/>1]))</highlight></codeline>
<codeline lineno="274"><highlight class="normal">IP.addParamValue(</highlight><highlight class="stringliteral">&apos;copyDirectStrings&apos;</highlight><highlight class="normal">,{},@(x)iscellstr(x)<sp/>||<sp/>ischar(x))</highlight></codeline>
<codeline lineno="275"><highlight class="normal">IP.addParamValue(</highlight><highlight class="stringliteral">&apos;updateOnly&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">false</highlight><highlight class="normal">,@(x)sum(x==[0<sp/>1]))</highlight></codeline>
<codeline lineno="276"><highlight class="normal">IP.addParamValue(</highlight><highlight class="stringliteral">&apos;gitignore&apos;</highlight><highlight class="normal">,[],@(x)exist(x,</highlight><highlight class="stringliteral">&apos;file&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="277"><highlight class="normal">IP.parse(varargin[:])</highlight></codeline>
<codeline lineno="278"><highlight class="normal">options<sp/>=<sp/>IP.Results;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Generate<sp/>a<sp/>nice<sp/>single<sp/>&quot;excludeRegexpString&quot;<sp/>from<sp/>&quot;ignoreStrings&quot;<sp/>and<sp/>&quot;ignoreSVN&quot;</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ischar(options.ignoreStrings)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>options.ignoreStrings=<sp/>[options.ignoreStrings];</highlight></codeline>
<codeline lineno="284"><highlight class="normal">end</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Exclude<sp/>&apos;.svn&apos;<sp/>directories<sp/>if<sp/>requested.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.ignoreSVN</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>options.ignoreStrings[end+1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>^\.svn$<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">end</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Exclude<sp/>.gitignore<sp/>directories</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>~isempty(options.gitignore)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>fid<sp/>=<sp/>fopen(options.gitignore);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>ignore<sp/>=<sp/>textscan(fid,</highlight><highlight class="stringliteral">&quot;<sp/>%s<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>ignore<sp/>=<sp/>ignore[1](5:end)<sp/></highlight><highlight class="comment">/*<sp/><sp/>unpack<sp/>and<sp/>dispense<sp/>the<sp/>headers</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fid)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>parse</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1:length(ignore)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>regexp(ignore[i],<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(?=*).+$<sp/>&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">/*<sp/>is<sp/>file</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignore[i]<sp/>=<sp/>regexprep(ignore[i],<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\*<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>.+<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/><sp/>replace<sp/>wildcard</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignore[i]<sp/>=<sp/>[ignore[i]<sp/>&quot;<sp/>$<sp/>&quot;];<sp/></highlight><highlight class="comment">/*<sp/><sp/>add<sp/>end<sp/>of<sp/>string<sp/>token</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignore[i]<sp/>=<sp/>regexprep(ignore[i],<sp/></highlight><highlight class="stringliteral">&quot;<sp/>/$<sp/>&quot;</highlight><highlight class="normal">,<sp/>);<sp/></highlight><highlight class="comment">/*<sp/><sp/>remove<sp/>end</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignore[i]<sp/>=<sp/>[&quot;<sp/>^<sp/>&quot;<sp/>ignore[i]<sp/>&quot;<sp/>$<sp/>&quot;];<sp/></highlight><highlight class="comment">/*<sp/><sp/>add<sp/>start<sp/>and<sp/>end<sp/>of<sp/>string<sp/>token</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regexprep(ignore[i],<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\.<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\\.<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/><sp/>escape<sp/>any<sp/>dots</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>add<sp/>to<sp/>ignoreStrings</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>options.ignoreStrings=<sp/>[options.ignoreStrings;<sp/>ignore]</highlight></codeline>
<codeline lineno="319"><highlight class="normal">end</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Exclude<sp/>&apos;.&apos;<sp/>and<sp/>&apos;..&apos;<sp/>explicitly,<sp/>along<sp/>with<sp/>all<sp/>other<sp/>requested<sp/>exclusions</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">mustIgnoreList<sp/>=<sp/>[&quot;<sp/>^\.$<sp/>&quot;,&quot;<sp/>^\.\.$<sp/>&quot;,[mfilename<sp/>&quot;<sp/>.m<sp/>&quot;]];<sp/></highlight><highlight class="comment">/*<sp/><sp/>Must<sp/>ignore<sp/>THIS<sp/>file.<sp/>Deploying<sp/>this<sp/>file<sp/>causes<sp/>inconsistencies<sp/>in<sp/>MATLAB&apos;s<sp/>paths</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">options.excludeRegexpString=<sp/>sprintf(</highlight><highlight class="stringliteral">&quot;<sp/>|%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>mustIgnoreList[:],<sp/>options.ignoreStrings[:]);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Generate<sp/>a<sp/>nice<sp/>single<sp/>&quot;copyDirectString&quot;<sp/>regexp<sp/>from<sp/>copyDirectStrings<sp/>and<sp/>copyFigFiles</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ischar(options.copyDirectStrings)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>options.copyDirectStrings=<sp/>[options.copyDirectStrings];</highlight></codeline>
<codeline lineno="331"><highlight class="normal">end</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.copyFigFiles,<sp/>options.copyDirectStrings[end+1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\.fig$<sp/>&quot;</highlight><highlight class="normal">;<sp/>end</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.copyDllFiles,<sp/>options.copyDirectStrings[end+1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\.dll$<sp/>&quot;</highlight><highlight class="normal">;<sp/>end</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options.copyMexFiles</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>mexExts<sp/>=<sp/>mexext(</highlight><highlight class="stringliteral">&quot;<sp/>all<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1:numel(mexExts)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.copyDirectStrings[end+1]<sp/>=<sp/>[&quot;<sp/>\.<sp/>&quot;<sp/>mexExts(i).ext<sp/>&quot;<sp/>$<sp/>&quot;];</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="340"><highlight class="normal">end</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">options.copyDirectString=<sp/>sprintf(</highlight><highlight class="stringliteral">&quot;<sp/>|%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>options.copyDirectStrings[:]);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">end</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/petejonze/Dropbox/MatlabToolkits/ivis_new_tmpwrapper/ivis/admin/deploypcode.m"/>
  </compounddef>
</doxygen>
