<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="todo" kind="page">
    <compoundname>todo</compoundname>
    <title>Todo List</title>
    <detaileddescription>
<para><variablelist>
<varlistentry><term><anchor id="todo_1_todo000001"/>Class <ref refid="classivis_1_1calibration_1_1_iv_calibration" kindref="compound">ivis::calibration::IvCalibration</ref>  </term></varlistentry>
<listitem><para>report goodness of fit metric </para><para>visualization </para><para>facility to query if point is outside calibrated area? (could be done quite roughly / assuming a rectangle) [alt could be done more elegantly using a graphic movement listener] </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000002"/>Member <ref refid="classivis_1_1calibration_1_1_iv_calibration_1a919534b51e96f5314193ff1960ff4f21" kindref="member">ivis::calibration::IvCalibration::addMeasurements</ref>  (matlabtypesubstitute targ, matlabtypesubstitute resp)</term></varlistentry>
<listitem><para>check that Std Dev. within some specified criterion? </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000003"/>Member <ref refid="classivis_1_1calibration_1_1_iv_calibration_1afe8e6f9a02e681d30b0f37e568f25699" kindref="member">ivis::calibration::IvCalibration::updateDriftCorrection</ref>  (matlabtypesubstitute trueXY_px, matlabtypesubstitute estXY_px, matlabtypesubstitute maxCorrection_deg, matlabtypesubstitute weight)</term></varlistentry>
<listitem><para>in future versions may want to have different tolerances for x and y deviations </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000004"/>Class <ref refid="classivis_1_1classifier_1_1_iv_classifier_grid" kindref="compound">ivis::classifier::IvClassifierGrid</ref>  </term></varlistentry>
<listitem><para>classification with graphicalObjects as input is shaky at best </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000005"/>Class <ref refid="classivis_1_1eyetracker_1_1_iv_data_input" kindref="compound">ivis::eyetracker::IvDataInput</ref>  </term></varlistentry>
<listitem><para>discard old points (particularly useful for avoiding slowdowns/dropped-frames? </para><para>transfer hardcoded values to IvConfig </para><para>discard samples where only 1 eye is available? (re: Sam Wass) </para><para>make px2deg mapping dynamic based on subject movement? </para><para>in the long run the eyeball z data should be filtered/buffered through this class too. At the moment the logic is internal to each eyetracker, since some trackers don&apos;t return this information. But most do now, and it would be good to deal with it properly. This would allow proper retrieval (e.g., get last points since T), and should improve accuracy too (e.g., low pass filtering). </para><para>allow setting of trackerInFrontMonitor_mm </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000008"/>Member <ref refid="classivis_1_1eyetracker_1_1_iv_data_input_1a2a7ec791ef165c14b7d15546c7a00685" kindref="member">ivis::eyetracker::IvDataInput::estimateLag</ref>  (matlabtypesubstitute params, matlabtypesubstitute withTagging, matlabtypesubstitute withGUI, matlabtypesubstitute Fs)</term></varlistentry>
<listitem><para>compute ivisOverhead empirically  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000007"/>Member <ref refid="classivis_1_1eyetracker_1_1_iv_data_input_1ad3993a950a17fbcf4fe3ebfe7f4ba79c" kindref="member">ivis::eyetracker::IvDataInput::processData</ref>  (matlabtypesubstitute x, matlabtypesubstitute y, matlabtypesubstitute t, matlabtypesubstitute vldty, matlabtypesubstitute p, matlabtypesubstitute zL_mm, matlabtypesubstitute zR_mm, matlabtypesubstitute logData)</term></varlistentry>
<listitem><para>ought to update pixel_per_dg based on latest position estimate(?) </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000006"/>Member <ref refid="classivis_1_1eyetracker_1_1_iv_data_input_1a511bf3df895d8ad25ed807353b14922c" kindref="member">ivis::eyetracker::IvDataInput::updateDriftCorrection</ref>  (matlabtypesubstitute trueXY, matlabtypesubstitute estXY, matlabtypesubstitute maxCorrection, matlabtypesubstitute weight)</term></varlistentry>
<listitem><para>check that this works! </para><para>could weight the difference differently depending on the location on the screen?  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000009"/>Class <ref refid="classivis_1_1eyetracker_1_1_iv_tobii" kindref="compound">ivis::eyetracker::IvTobii</ref>  </term></varlistentry>
<listitem><para>switch to single precision? </para><para>protect constructor? </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000010"/>Class <ref refid="classivis_1_1eyetracker_1_1_iv_tobii_eye_x" kindref="compound">ivis::eyetracker::IvTobiiEyeX</ref>  </term></varlistentry>
<listitem><para>switch to single precision? </para><para>protect constructor? </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000011"/>Class <ref refid="classivis_1_1graphic_1_1_iv_graphic" kindref="compound">ivis::graphic::IvGraphic</ref>  </term></varlistentry>
<listitem><para>: check getX0Y0 </para><para>: delete setXY and reinitXY </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000012"/>Class <ref refid="classivis_1_1graphic_1_1_iv_prior" kindref="compound">ivis::graphic::IvPrior</ref>  </term></varlistentry>
<listitem><para>with the introduction of the stationary flag in the IvGraphic class, this is rapidly becoming redundant. Maybe should subclass IvGraphic? </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000013"/>Class <ref refid="classivis_1_1gui_1_1_iv_g_u_iclassifier" kindref="compound">ivis::gui::IvGUIclassifier</ref>  </term></varlistentry>
<listitem><para>rename plots with discriptive names (spatial/temporal rather than plot1 plot2) </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000014"/>Class <ref refid="classivis_1_1gui_1_1_iv_g_u_iclassifier_box" kindref="compound">ivis::gui::IvGUIclassifierBox</ref>  </term></varlistentry>
<listitem><para>rename plots with discriptive names (spatial/temporal rather than plot1 plot2) </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000015"/>Class <ref refid="classivis_1_1gui_1_1_iv_g_u_iclassifier_grid" kindref="compound">ivis::gui::IvGUIclassifierGrid</ref>  </term></varlistentry>
<listitem><para>rename plots with discriptive names (spatial/temporal rather than plot1 plot2) </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000016"/>Class <ref refid="classivis_1_1gui_1_1_iv_g_u_iclassifier_l_l" kindref="compound">ivis::gui::IvGUIclassifierLL</ref>  </term></varlistentry>
<listitem><para>rename plots with discriptive names (spatial/temporal rather than plot1 plot2) </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000017"/>Class <ref refid="classivis_1_1gui_1_1_iv_g_u_iclassifier_vector" kindref="compound">ivis::gui::IvGUIclassifierVector</ref>  </term></varlistentry>
<listitem><para>rename plots with discriptive names (spatial/temporal rather than plot1 plot2) </para><para>Wind_rose.m for a fancier/forced-alternative version?  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000018"/>Member <ref refid="classivis_1_1gui_1_1_iv_g_u_ielement_1a1404d0c78b5319c7e8863f4fc7aa8a6a" kindref="member">ivis::gui::IvGUIelement::init</ref>  (matlabtypesubstitute GUIidx, matlabtypesubstitute normaliseDims, matlabtypesubstitute bgcolor)</term></varlistentry>
<listitem><para>sort out isempty(normaliseDims)  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000019"/>Class <ref refid="classivis_1_1gui_1_1_iv_g_u_iwebcam" kindref="compound">ivis::gui::IvGUIwebcam</ref>  </term></varlistentry>
<listitem><para>add pausetoggle button(s) </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000020"/>Member <ref refid="classivis_1_1log_1_1_iv_data_log_1a5d34eec5478e4d41c64a7a4c7908282c" kindref="member">ivis::log::IvDataLog::getLastKnownXY</ref>  (matlabtypesubstitute n, matlabtypesubstitute useRaw, matlabtypesubstitute allowNan)</term></varlistentry>
<listitem><para>currently exlcuding NaNs will reduce the N items returned - might be nice to return a constant number of non-NaN elements(?). </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000021"/>Class <ref refid="classivis_1_1main_1_1_iv_params" kindref="compound">ivis::main::IvParams</ref>  </term></varlistentry>
<listitem><para>: <ulink url="http://www.mathworks.co.uk/help/matlab/matlab_oop/listening-for-changes-to-property-values.html">http://www.mathworks.co.uk/help/matlab/matlab_oop/listening-for-changes-to-property-values.html</ulink> </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000022"/>Member <ref refid="classivis_1_1math_1_1pdf_1_1_iv_hit_func_1a8985cb5538f472bfcc9363a6d8504f2e" kindref="member">ivis::math::pdf::IvHitFunc::plot</ref>  (matlabtypesubstitute color)=0</term></varlistentry>
<listitem><para>change mu to be stored internally?  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000023"/>Member <ref refid="classivis_1_1math_1_1pdf_1_1_iv_hit_func_1aed3e75b0ba55b53fc5f12915cad6d638" kindref="member">ivis::math::pdf::IvHitFunc::update</ref>  (matlabtypesubstitute mu_px)=0</term></varlistentry>
<listitem><para>change mu to be stored internally? </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000024"/>Class <ref refid="classivis_1_1test_1_1_test___iv_classifier_l_l" kindref="compound">ivis::test::Test_IvClassifierLL</ref>  </term></varlistentry>
<listitem><para>write me </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000025"/>Class <ref refid="classivis_1_1test_1_1_test___iv_data_input" kindref="compound">ivis::test::Test_IvDataInput</ref>  </term></varlistentry>
<listitem><para>write me </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000026"/>Class <ref refid="classivis_1_1test_1_1_test___iv_mouse" kindref="compound">ivis::test::Test_IvMouse</ref>  </term></varlistentry>
<listitem><para>write me </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000027"/>Class <ref refid="classivis_1_1video_1_1_iv_webcam" kindref="compound">ivis::video::IvWebcam</ref>  </term></varlistentry>
<listitem><para>: check if specified deviceId is valid </para><para>: handle device detection</para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
